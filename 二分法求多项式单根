/*
二分法求函数根的原理为：如果连续函数f(x)在区间[a,b]的两个端点取值异号，即f(a)f(b)<0，则它在这个区间内至少存在1个根r，即f(r)=0。

二分法的步骤为：

检查区间长度，如果小于给定阈值，则停止，输出区间中点(a+b)/2；否则
如果f(a)f(b)<0，则计算中点的值f((a+b)/2)；
如果f((a+b)/2)正好为0，则(a+b)/2就是要求的根；否则
如果f((a+b)/2)与f(a)同号，则说明根在区间[(a+b)/2,b]，令a=(a+b)/2，重复循环；
如果f((a+b)/2)与f(b)同号，则说明根在区间[a,(a+b)/2]，令b=(a+b)/2，重复循环。
本题目要求编写程序，计算给定3阶多项式f(x)=a
​3
​​ x
​3
​​ +a
​2
​​ x
​2
​​ +a
​1
​​ x+a
​0
​​ 在给定区间[a,b]内的根。

输入格式：
输入在第1行中顺序给出多项式的4个系数a
​3
​​ 、a
​2
​​ 、a
​1
​​ 、a
​0
​​ ，在第2行中顺序给出区间端点a和b。题目保证多项式在给定区间内存在唯一单根。

输出格式：
在一行中输出该多项式在该区间内的根，精确到小数点后2位。

输入样例：
*/
#include <stdio.h>

double a3, a2, a1, a0;

double calculate(double x) {
    return a3 * x*x*x + a2 * x*x + a1 * x + a0;
}

int main(void) {
    double a, b, result;

    scanf("%lf %lf %lf %lf", &a3, &a2, &a1, &a0);
    scanf("%lf %lf", &a, &b);
    while (b - a >= 0.01) {
        if (calculate((a + b) / 2) == 0) {
            result = (a + b) / 2;
            break;
        }
        if (calculate(a) == 0) {
            result = a;
            break;
        }
        if (calculate(b) == 0) {
            result = b;
            break;
        }
        if (calculate(a)*calculate((a + b) / 2) >= 0) {
            a = (a + b) / 2;
        }
        else {
            b = (a + b) / 2;
        }
    }
    if (b - a < 0.01) {
        result = (a + b) / 2;
    }
    printf("%.2f\n", result);

    return 0;
}
